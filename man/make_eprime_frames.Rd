% Generated by roxygen2 (4.0.1): do not edit by hand
\name{make_eprime_frames}
\alias{make_eprime_frames}
\title{Convert log-frames into EprimeFrames}
\usage{
make_eprime_frames(x, tidy = TRUE)
}
\arguments{
\item{x}{a character vector with lines of the form \code{"key: value"}, or a
list of vectors of colon-separated text}
}
\value{
when passed a vector of \code{"key: value"} lines, a single
  EprimeFrame object is returned. When passed a list of such vectors, a
  FrameList object (a list of EprimeFrames) is returned.
}
\description{
In other words, convert character vectors of implicit key-value pairs,
\code{c("key: value", ...)}, into lists of explicit key-value pairs,
\code{list(key = value, ...)}.
}
\details{
During the conversion, if \code{Running: x}, then the
  \code{x.Sample} and \code{x.Cycle} lines are simplified into \code{Sample}
  and \code{Cycle} lines. The \code{x: value} line is recoded as
  \code{Eprime.LevelName: x_value}. The purpose of this tidying is to force
  the same set of key names (eventually, column names) onto frames with
  different values for "Running".
}
\examples{
lines <- c("\\t*** LogFrame Start ***",
           "\\tProcedure: FamTask",
           "\\titem1: bear",
           "\\titem2: chair",
           "\\tCorrectResponse: bear",
           "\\tImageSide: Left",
           "\\tDuration: 885",
           "\\tFamiliarization: 1",
           "\\tFamInforcer: 1",
           "\\tReinforcerImage: Bicycle1",
           "\\tFamiliarization.Cycle: 1",
           "\\tFamiliarization.Sample: 1",
           "\\tRunning: Familiarization",
           "\\tFamTarget.RESP: ",
           "\\tCorrect: True",
           "\\t*** LogFrame End ***")

make_eprime_frames(lines)
# List of 16
# $ Eprime.LevelName  : chr "Familiarization_1"
# $ Eprime.Level      : num 2
# $ Eprime.Basename   : logi NA
# $ Eprime.FrameNumber: logi NA
# $ Procedure         : chr "FamTask"
# $ Running           : chr "Familiarization"
# $ item1             : chr "bear"
# $ item2             : chr "chair"
# $ CorrectResponse   : chr "bear"
# $ ImageSide         : chr "Left"
# $ Duration          : chr "885"
# $ FamInforcer       : chr "1"
# $ ReinforcerImage   : chr "Bicycle1"
# $ Cycle             : chr "1"
# $ Sample            : chr "1"
# $ Correct           : chr "True"
# - attr(*, "class")= chr [1:2] "EprimeFrame" "list"
}

